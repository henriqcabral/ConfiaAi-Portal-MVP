name: Deploy to Azure Web App

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: confiai-portal-mvp
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Run tests
      run: npm run test

    - name: Build application
      run: npm run build
      env:
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push container image to registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }}
        configuration-file: |
          {
            "appCommandLine": "node server.js",
            "appSettings": [
              {
                "name": "WEBSITES_PORT",
                "value": "8080"
              },
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "GOOGLE_CLIENT_ID",
                "value": "${{ secrets.GOOGLE_CLIENT_ID }}"
              },
              {
                "name": "GOOGLE_CLIENT_SECRET",
                "value": "${{ secrets.GOOGLE_CLIENT_SECRET }}"
              },
              {
                "name": "NEXTAUTH_URL",
                "value": "${{ secrets.NEXTAUTH_URL }}"
              },
              {
                "name": "NEXTAUTH_SECRET",
                "value": "${{ secrets.NEXTAUTH_SECRET }}"
              },
              {
                "name": "OPENAI_API_KEY",
                "value": "${{ secrets.OPENAI_API_KEY }}"
              }
            ]
          } 